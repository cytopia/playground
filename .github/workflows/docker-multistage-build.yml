---
name: "Build multistage docker images (multi -flavours, -versions, -architectures)"

on:
  workflow_call:
    ###
    ### Variables
    ###
    inputs:
      matrix:
        description: 'The build matrix'
        required: true
        type: string
      arch:
        description: 'The architecture to build against.'
        required: true
        type: string
      stage:
        description: 'The stage to build (Examples: base, mods, prod or work).'
        required: true
        type: string
      stage_prev:
        description: 'The previous stage (used for downloading previous artifact).'
        required: true
        type: string
      artifact_prefix:
        description: 'Unique artifact name prefix (to avoid overriding existing artifcats during parallel runs).'
        required: true
        type: string
      has_refs:
        description: 'The ref build matrix as JSON string (list of git refs to build/deploy).'
        required: true
        type: boolean
      run_tests:
        description: 'Dertermines whether we run integration tests or not.'
        required: true
        type: boolean
      upload_artifact:
        description: 'Dertermines whether we upload the artifact not.'
        required: true
        type: boolean

jobs:
  configure:
    name: Configure
    runs-on: ubuntu-latest

    ###
    ### Outputs
    ###
    outputs:
      # Copied from inputs
      #versions: ${{ inputs.versions }}
      #refs: ${{ inputs.refs }}
      ## Flags
      #can_login: ${{ steps.set-login.outputs.can_login }}
      #can_push: ${{ steps.set-push.outputs.can_push }}
      #has_refs: ${{ steps.set-refs.outputs.has_refs }}
      # Values
      #artifact_prefix: ${{ steps.set-artifact-prefix.outputs.prefix }}
      matrix_build: ${{ steps.set-matrix.outputs.matrix_build }}
      arch_enabled: ${{ steps.set-matrix.outputs.arch_enabled }}

    ###
    ### Steps
    ###
    steps:
      - name: "[Set-Output] matrix_build and matrix_deploy (Build Matrix & Deploy Matrix)"
        id: set-matrix
        shell: bash
        run: |
          MATRIX_BUILD="$( echo '${{ inputs.matrix }}' | jq -M -c 'map(select(.arch == "${{ inputs.arch }}"))' )"
          if [ "${MATRIX_BUILD}" = "[]" ]; then
            ARCH_ENABLED='false'
          fi
            ARCH_ENABLED='true'
          fi
          echo "::set-output name=matrix_build::${MATRIX_BUILD}"
          echo "::set-output name=arch_enabled::${ARCH_ENABLED}"

  # -----------------------------------------------------------------------------------------------
  # JOB: BUILD
  # -----------------------------------------------------------------------------------------------
  build:
    needs: [configure]
    name: ${{ matrix.name }}-${{ matrix.version }}-${{ inputs.stage }} (${{ matrix.arch }}) ${{ matrix.refs }}
    runs-on: ubuntu-latest
    if: ${{ needs.configure.arch_enabled == 'true' }}
    strategy:
      fail-fast: false
      matrix:
        include: ${{ fromJson(needs.configure.arch_enabled) }}
    steps:

      # ------------------------------------------------------------
      # Setup repository
      # ------------------------------------------------------------
      - name: "[SETUP] Checkout repository (current)"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
        if: ${{ !inputs.has_refs }}

      - name: "[SETUP] Checkout repository (ref: ${{ matrix.refs }})"
        uses: actions/checkout@v3
        with:
          fetch-depth: 0
          ref: ${{ matrix.refs }}
        if: ${{ inputs.has_refs }}

      - name: "[SETUP] Setup QEMU environment"
        uses: docker/setup-qemu-action@v1
        with:
          image: tonistiigi/binfmt:latest
          platforms: all

      - name: "[SETUP] Set artifact names"
        id: set-artifact-name
        run: |
          PRE_HASH="$( git rev-parse HEAD | head -c 10 )"
          VERSION="${{ matrix.version }}"
          ARCH="$( echo "${{ matrix.arch }}" | sed 's|/|-|g' )"

          NAME_PREV="${{ inputs.artifact_prefix }}-${PRE_HASH}-${VERSION}-${ARCH}-${{ inputs.stage_prev }}"
          NAME_CURR="${{ inputs.artifact_prefix }}-${PRE_HASH}-${VERSION}-${ARCH}-${{ inputs.stage }}"
          echo "::set-output name=prev::${NAME_PREV}"
          echo "::set-output name=curr::${NAME_CURR}"


      # ------------------------------------------------------------
      # Artifact Import
      # ------------------------------------------------------------

      ###
      ### Download and import previously built image (if it exists)
      ###
      #- name: "[Artifact Load] Download previously built image"
      #  uses: Wandalen/wretry.action@v1.0.11
      #  with:
      #    action: actions/download-artifact@v3
      #    with: |
      #      name: ${{ steps.set-artifact-name.outputs.prev }}
      #    attempt_limit: 20
      #    attempt_delay: 10000
      #  if: ${{ inputs.stage_prev != '' }}

      - name: "[Artifact Load] Import previously built image"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            echo 'make load INFILE=${{ steps.set-artifact-name.outputs.prev }}'
        if: ${{ inputs.stage_prev != '' }}


      # ------------------------------------------------------------
      # Build
      # ------------------------------------------------------------
      - name: Build
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            echo 'make build VERSION=${{ matrix.version }} STAGE=${{ inputs.stage }} FLAVOUR=${{ matrix.flavour }} ARCH=${{ matrix.arch }}'


      # ------------------------------------------------------------
      # Test
      # ------------------------------------------------------------
      - name: Test
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            echo 'make test VERSION=${{ matrix.version }} STAGE=${{ inputs.stage }} FLAVOUR=${{ matrix.flavour }} ARCH=${{ matrix.arch }}'
        if: ${{ inputs.run_tests }}


      # ------------------------------------------------------------
      # Artifact Export
      # ------------------------------------------------------------

      ###
      ### Export current image
      ###
      - name: "[Artifact Save] Export currently built image"
        uses: cytopia/shell-command-retry-action@v0.1.2
        with:
          command: |
            echo 'make save-verify VERSION=${{ matrix.version }} STAGE=${{ inputs.stage }} FLAVOUR=${{ matrix.flavour }} ARCH=${{ matrix.arch }} OUTFILE=${{ steps.set-artifact-name.outputs.curr }} INFILE=${{ steps.set-artifact-name.outputs.curr }}'
        if: ${{ inputs.upload_artifact }}

      ###
      ### Upload current image
      ###
      #- name: "[Artifact Save] Upload currently built image"
      #  uses: Wandalen/wretry.action@v1.0.11
      #  with:
      #    action: actions/upload-artifact@v3
      #    with: |
      #      name: ${{ steps.set-artifact-name.outputs.curr }}
      #      path: ${{ steps.set-artifact-name.outputs.curr }}
      #      if-no-files-found: error
      #    attempt_limit: 20
      #    attempt_delay: 10000
      #  if: ${{ inputs.upload_artifact }}

      ###
      ### Verify uploaded image
      ###
      #- name: "[Artifact Save] Download (verify)"
      #  uses: actions/download-artifact@v3
      #  with:
      #    name: ${{ steps.set-artifact-name.outputs.curr }}
      #    path: ${{ steps.set-artifact-name.outputs.curr }}.tmp
      #  if: ${{ inputs.upload_artifact }}
